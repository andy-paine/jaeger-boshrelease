<%-
  require 'yaml'
  supported_types = ['memory', 'badger', 'elasticsearch', 'cassandra']
  raise "Only #{supported_types} are supported values for span_storage_type, not: #{p('span_storage_type')}" unless supported_types.include? p('span_storage_type')
  flags = []

  collector_props = ['grpc-port', 'http-port', 'num-workers', 'port', 'queue-size', 'queue-size-memory', 'zipkin.http-port' ]
  flags += collector_props.map do |property|
    property_value = p("collector.#{property}")
    "--collector.#{property}=#{property_value}"
  end
  if_p('collector.tags') do |tags|
    flags << "--collector.tags='#{tags.map do |key,value| "#{key}=#{value}" end.join(',')}'"
  end
  flags << "--collector.zipkin.allowed-headers='#{p('collector.zipkin.allowed-headers').join(',')}'"
  flags << "--collector.zipkin.allowed-origins='#{p('collector.zipkin.allowed-origins').join(',')}'"

  if_p('collector.grpc.tls.private_key', 'collector.grpc.tls.certificate') do |key, cert|
    flags << '--collector.grpc.tls.enabled=true'
    flags << '--collector.grpc.tls.key=/var/vcap/jobs/jaeger-all-in-one/tls/grpc.key'
    flags << '--collector.grpc.tls.cert=/var/vcap/jobs/jaeger-all-in-one/tls/grpc.crt'
  end.else do
    flags << '--collector.grpc.tls.enabled=false'
  end
  if_p('collector.grpc.tls.client-ca') do |_|
    flags << '--collector.grpc.tls.client-ca=/var/vcap/jobs/jaeger-all-in-one/tls/grpc-client-ca.crt'
  end

  case p('span_storage_type')
  when 'badger'
    flags << "--badger.ephemeral=false"
    flags << "--badger.directory-key=/var/vcap/store/jaeger-all-in-one/keys"
    flags << "--badger.directory-value=/var/vcap/store/jaeger-all-in-one/values"
  end
-%>
processes:
  - name: jaeger-all-in-one
    executable: /var/vcap/packages/jaeger/jaeger-all-in-one
    env:
      SPAN_STORAGE_TYPE: <%= p('span_storage_type') %>
    <%- if p('span_storage_type') == 'badger' %>
    additional_volumes:
    - path: /var/vcap/store/jaeger-all-in-one/keys
      writable: true
    - path: /var/vcap/store/jaeger-all-in-one/values
      writable: true
    <%- end %>

    args:
    - --admin-http-port=14269
    <%- flags.each do |flag| -%>
    - <%= flag %>
    <%- end -%>