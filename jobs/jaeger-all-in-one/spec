---
name: jaeger-all-in-one
packages:
- jaeger

templates:
  config/bpm.yml.erb: config/bpm.yml
  config/ui.json.erb: config/ui.json
  config/sampling-strategies.json.erb: config/sampling-strategies.json
  config/es/tags-as-fields.txt.erb: config/es/tags-as-fields.txt
  config/es/token.txt.erb: config/es/token.txt
  tls/collector/grpc.key.erb: tls/collector/grpc.key
  tls/collector/grpc.crt.erb: tls/collector/grpc.crt
  tls/collector/grpc-client-ca.crt.erb: tls/collector/grpc-client-ca.crt
  tls/reporter/grpc.key.erb: tls/reporter/grpc.key
  tls/reporter/grpc.crt.erb: tls/reporter/grpc.crt
  tls/reporter/grpc-ca.crt.erb: tls/reporter/grpc-ca.crt
  tls/es.tls.key.pem.erb: tls/es.tls.key.pem
  tls/es.tls.cert.pem.erb: tls/es.tls.cert.pem
  tls/es.tls.ca.pem.erb: tls/es.tls.ca.pem

consumes:
- name: elasticsearch
  type: elasticsearch

properties:
  admin-http-port:
    description: The http port for the admin server, including health check, /metrics, etc.
    default: 14269
  downsampling.hashsalt:
    description: Salt used when hashing trace id for downsampling.
  downsampling.ratio:
    description: "Ratio of spans passed to storage after downsampling (between 0 and 1), e.g ratio = 0.3 means we are keeping 30% of spans and dropping 70% of spans; ratio = 1.0 disables downsampling."
    default: 1.0
  http-server.host-port:
    description: "host:port of the http server (e.g. for /sampling point and /baggageRestrictions endpoint)"
    default: ":5778"
  log-level:
    description: "Minimal allowed log Level. For more levels see https://github.com/uber-go/zap"
    default: info
  metrics-backend:
    description: "Defines which metrics backend to use for metrics reporting: expvar, prometheus, none"
    default: prometheus
  metrics-http-route:
    description: Defines the route of HTTP endpoint for metrics backends that support scraping
    default: "/metrics"
  query.additional-headers:
    description: Additional HTTP response headers
    example:
    - "Access-Control-Allow-Origin: https://example.com"
  query.base-path:
    description: "The base path for all HTTP routes, e.g. /jaeger; useful when running behind a reverse proxy"
    default: "/"
  query.bearer-token-propagation:
    description: Allow propagation of bearer token to be used by storage plugins
    default: false
  query.port:
    description: The port for the query service
    default: 16686
  query.static-files:
    description: The directory path override for the static assets for the UI
  query.ui-config:
    description: UI configuration file contents in JSON format
  sampling.strategies-file:
    description: The content for the sampling strategies file in JSON format. See sampling documentation to see format of the file
  span_storage_type:
    description: "What span storage type to use. Supported values are: memory, badger, elasticsearch, cassandra"
    default: badger
  memory.max-traces:
    description: The maximum amount of traces to store in memory
    default: 0
  badger.consistency:
    description: If all writes should be synced immediately to physical disk. This will impact write performance.
    default: false
  badger.maintenance-interval:
    description: "How often the maintenance thread for values is ran. Format is time.Duration (https://golang.org/pkg/time/#Duration)"
    default: 5m0s
  badger.metrics-update-interval:
    description: "How often the badger metrics are collected by Jaeger. Format is time.Duration (https://golang.org/pkg/time/#Duration)"
    default: 10s
  badger.read-only:
    description: Allows to open badger database in read only mode. Multiple instances can open same database in read-only mode. Values still in the write-ahead-log must be replayed before opening.
    default: false
  badger.span-store-ttl:
    description: "How long to store the data. Format is time.Duration (https://golang.org/pkg/time/#Duration)"
    default: 72h0m0s
  badger.truncate:
    description: If write-ahead-log should be truncated on restart. this will cause data loss.
    default: false
  collector.grpc-port:
    description: "The gRPC port for the collector service"
    default: 14250
  collector.grpc.tls.client-ca:
    description: CA certificate used to verify certificates presented by clients (if unset, all clients are permitted)
    example: |
      -----BEGIN CERTIFICATE-----
      etc.
  collector.grpc.tls.certificate:
    description: TLS certificate, used to identify this server to clients
    example: |
      -----BEGIN CERTIFICATE-----
      etc.
  collector.grpc.tls.private_key:
    description: TLS private key, used to identify this server to clients
    example: |
      -----BEGIN RSA PRIVATE KEY-----
      etc.
  collector.http-port:
    description: The HTTP port for the collector service
    default: 14268
  collector.num-workers:
    description: The number of workers pulling items from the queue
    default: 50
  collector.port:
    description: The TChannel port for the collector service
    default: 14267
  collector.queue-size:
    description: The queue size of the collector
    default: 2000
  collector.queue-size-memory:
    description: (Experimental) The max memory size in MiB to use for the dynamic queue
    default: 0
  collector.tags:
    description: One or more tags to be added to the Process tags of all spans passing through this collector
    example:
      env: foo
      region: bar
  collector.zipkin.allowed-headers:
    description: List of allowed headers for the Zipkin collector service
    default:
    - content-type
  collector.zipkin.allowed-origins:
    description: List of allowed origins for the Zipkin collector service
    default:
    - "*"
  collector.zipkin.http-port:
    description: The HTTP port for the Zipkin collector service e.g. 9411
    default: 0
  processor.jaeger-binary.server-host-port:
    description: host:port for the jaeger-binary UDP server
    default: ":6832"
  processor.jaeger-binary.server-max-packet-size:
    description: Max packet size for the jaeger-binary UDP server
    default: 65000
  processor.jaeger-binary.server-queue-size:
    description: Length of the queue for the jaeger-binary UDP server
    default: 1000
  processor.jaeger-binary.workers:
    description: How many jaeger-binary workers the processor should run
    default: 10
  processor.jaeger-compact.server-host-port:
    description: host:port for the jaeger-compact UDP server
    default: ":6831"
  processor.jaeger-compact.server-max-packet-size:
    description: Max packet size for the jaeger-compact UDP server
    default: 65000
  processor.jaeger-compact.server-queue-size:
    description: Length of the queue for the jaeger-compact UDP server
    default: 1000
  processor.jaeger-compact.workers:
    description: How many jaeger-compact workers the processor should run
    default: 10
  processor.zipkin-compact.server-host-port:
    description: host:port for the zipkin-compact UDP server
    default: ":5775"
  processor.zipkin-compact.server-max-packet-size:
    description: Max packet size for the zipkin-compact UDP server
    default: 65000
  processor.zipkin-compact.server-queue-size:
    description: Length of the queue for the zipkin-compact UDP server
    default: 1000
  processor.zipkin-compact.workers:
    description: How many zipkin-compact workers the processor should run
    default: 10
  reporter.grpc.discovery.min-peers:
    description: Max number of collectors to which the agent will try to connect at any given time
    default: 3
  reporter.grpc.retry.max:
    description: Sets the maximum number of retries for a call
    default: 3
  reporter.grpc.tls.skip-host-verify:
    description: (insecure) Skip server's certificate chain and host name verification
    default: false
  reporter.grpc.host-port:
    description: "List of host:port representing collectors to connect to directly"
    example:
    - "example.com:14250"
  reporter.grpc.tls.ca:
    description: TLS CA used to verify the remote server(s) (by default will use the system truststore)
    example: |
      -----BEGIN CERTIFICATE-----
      etc.
  reporter.grpc.tls.certificate:
    description: TLS certificate, used to identify this process to the remote server(s)
    example: |
      -----BEGIN CERTIFICATE-----
      etc.
  reporter.grpc.tls.private_key:
    description: TLS private key, used to identify this process to the remote server(s)
    example: |
      -----BEGIN RSA PRIVATE KEY-----
      etc.
  reporter.grpc.tls.server-name:
    description: Override the TLS server name we expect in the certificate of the remove server(s)
  es.bulk.actions:
    description: The number of requests that can be enqueued before the bulk processor decides to commit
    default: 1000
  es.bulk.flush-interval:
    description: A time.Duration after which bulk requests are committed, regardless of other thresholds. Set to zero to disable. By default, this is disabled.
    default: 200ms
  es.bulk.size:
    description: The number of bytes that the bulk requests can take up before the bulk processor decides to commit
    default: 5000000
  es.bulk.workers:
    description: The number of workers that are able to receive bulk requests and eventually commit them to Elasticsearch
    default: 1
  es.create-index-templates:
    description: Create index templates at application startup. Set to false when templates are installed manually.
    default: true
  es.index-prefix:
    description: 'Optional prefix of Jaeger indices. For example "production" creates "production-jaeger-*".'
  es.max-num-spans:
    description: The maximum number of spans to fetch at a time per query in Elasticsearch
    default: 10000
  es.max-span-age:
    description: The maximum lookback for spans in Elasticsearch
    default: 72h0m0s
  es.num-replicas:
    description: The number of replicas per index in Elasticsearch
    default: 1
  es.num-shards:
    description: The number of shards per index in Elasticsearch
    default: 5
  es.password:
    description: The password required by Elasticsearch
  es.server-urls:
    description: List of Elasticsearch servers, must be full url
    example:
    - 'http://127.0.0.1:9200'
  es.sniffer:
    description: The sniffer config for Elasticsearch; client uses sniffing process to find all nodes automatically, disable if not required
    default: false
  es.tags-as-fields.all:
    description: (experimental) Store all span and process tags as object fields. If true .tags-as-fields.config-file is ignored. Binary tags are always stored as nested objects.
    default: false
  es.tags-as-fields.tags:
    description: (experimental) List of tag keys which will be stored as object fields.
    example:
    - env
  es.tags-as-fields.dot-replacement:
    description: '(experimental) The character used to replace dots (".") in tag keys stored as object fields.'
  es.timeout:
    description: Timeout used for queries. A Timeout of zero means no timeout
    default: 0s
  es.tls.ca:
    description: Contents of a TLS CA (Certification Authority) file used to verify the remote server(s) (by default will use the system truststore)
    example: |
      -----BEGIN CERTIFICATE-----
      etc.
  es.tls.certificate:
    description: Contents of a TLS Certificate file, used to identify this process to the remote server(s)
    example: |
      -----BEGIN CERTIFICATE-----
      etc.
  es.tls.private_key:
    description: Contents of a TLS Private Key file, used to identify this process to the remote server(s)
    default:
    example: |
      -----BEGIN RSA PRIVATE KEY-----
      etc.
  es.tls.enabled:
    description: Enable TLS when talking to the remote server(s)
    default: false
  es.tls.server-name:
    description: Override the TLS server name we expect in the certificate of the remove server(s)
  es.tls.skip-host-verify:
    description: (insecure) Skip server's certificate chain and host name verification
    default: false
  es.token-file:
    description: Contents of a file containing bearer token. This flag also loads CA if it is specified.
  es.use-aliases:
    description: (experimental) Use read and write aliases for indices. Use this option with Elasticsearch rollover API. It requires an external component to create aliases before startup and then performing its management. Note that es.max-span-age is not taken into the account and has to be substituted by external component managing read alias.
    default: false
  es.username:
    description: The username required by Elasticsearch. The basic authentication also loads CA if it is specified.
  es.version:
    description: The major Elasticsearch version. If not specified, the value will be auto-detected from Elasticsearch.